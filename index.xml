<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My documentation page</title>
    <link>https://joostmeijles.github.io/doc/</link>
    <description>Recent content on My documentation page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://joostmeijles.github.io/doc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Debian</title>
      <link>https://joostmeijles.github.io/doc/debian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/debian/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.debian.org&#34;&gt;Debian&lt;/a&gt; is a free operating system (OS) for your computer.
Debian package management is for example used for &lt;a href=&#34;http://www.ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt; packages.&lt;/p&gt;

&lt;p&gt;To show package contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dpkg -c &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To show package meta info:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dpkg-deb -I &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://joostmeijles.github.io/doc/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; is the world’s leading software containerization platform.&lt;/p&gt;

&lt;p&gt;To let Docker use another path for the images and containers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/default/docker
vim&amp;gt; DOCKER_OPTS=&amp;quot;-g /volumes3/docker&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To interactively run a custom program, e.g. /bin/bash, in a running container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker exec -ti &amp;lt;container&amp;gt; /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To obtain the host name and port number of a container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker inspect --format=&#39;{{(index (index .NetworkSettings.Ports &amp;quot;80/tcp&amp;quot;) 0).HostPort}}&#39; &amp;lt;container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To link containers together:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --name &amp;lt;container&amp;gt; --link &amp;lt;container&amp;gt;:&amp;lt;image&amp;gt; -P -d &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To list all running and stopped containers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To stop all running containers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker ps -q | xargs docker stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To clean up all containers and images:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker ps -q -a | xargs docker rm -v &amp;amp;&amp;amp; docker images -q | xargs docker rmi -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A large sheet with common Docker commands can be found &lt;a href=&#34;https://github.com/wsargent/docker-cheat-sheet&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use &lt;a href=&#34;http://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; to run multiple containers together.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kitematic.com&#34;&gt;Docker Kitematic&lt;/a&gt;: a GUI for Docker containers. Is &lt;a href=&#34;https://github.com/kitematic/kitematic/issues/49&#34;&gt;Linux support&lt;/a&gt; still pending?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://netshare.containx.io/&#34;&gt;Netshare&lt;/a&gt; a Docker plugin to mount network storage (NFS, AWS EFS, CIFS) in a container.&lt;/p&gt;

&lt;p&gt;Not running (completed) containers and unused images will stay on your system until removed this will take up (quite) some disk space. To remove unused Docker images and completed containers use [Docker-GC|&lt;a href=&#34;https://github.com/spotify/docker-gc&#34;&gt;https://github.com/spotify/docker-gc&lt;/a&gt;].&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /etc:/etc:ro spotify/docker-gc
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GDB</title>
      <link>https://joostmeijles.github.io/doc/gdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/gdb/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://www.gnu.org/software/gdb/&#34;&gt;GNU Debugger&lt;/a&gt;, usually called just GDB and named gdb as an executable file,
is the standard debugger for the GNU operating system.&lt;/p&gt;

&lt;p&gt;To not let GDB handle signals:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gdb&amp;gt; handle SIGPIPE nostop noprint pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start program with GDB attached:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gdb -ex=r --args &amp;lt;program&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A cheat sheet with GDB commands can be found &lt;a href=&#34;https://people.eecs.berkeley.edu/~mavam/teaching/cs161-sp11/gdb-refcard.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://joostmeijles.github.io/doc/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;Git&lt;/a&gt; (/ɡɪt/) is a version control system that is used for software development
and other version control tasks. As a distributed revision control system it
is aimed at speed, data integrity, and support for distributed, non-linear workflows.&lt;/p&gt;

&lt;p&gt;To fixup and squash commits in a branch read &lt;a href=&#34;http://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A list of useful Git commands can be found &lt;a href=&#34;http://orga.cat/posts/most-useful-git-commands&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To list remote sites:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To set remote url for a site, e.g. for switching from using HTTPS to SSH:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote set-url origin git@github.com:&amp;lt;username&amp;gt;/&amp;lt;repository&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://joostmeijles.github.io/doc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/</guid>
      <description>

&lt;p&gt;On this webpage I keep an overview of the software I use, interesting
articles that I find on the Internet,
and useful commands that weren&amp;rsquo;t clear at first sight after reading the documentation.&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;first admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;p&gt;I am just setting up this site and am in the process of transferring my current documentation to here.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;articles&#34;&gt;Articles&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34;&gt;Distributed Systems and Logs at LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://engineering.linkedin.com/kafka/benchmarking-apache-kafka-2-million-writes-second-three-cheap-machines&#34;&gt;Kafka at LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MacOS</title>
      <link>https://joostmeijles.github.io/doc/macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/macos/</guid>
      <description>&lt;p&gt;To automatically mount network folders in MacOS:&lt;/p&gt;

&lt;p&gt;Create a file containing the mount points, e.g. &lt;em&gt;/etc/auto_nas&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network-address -fstype=afp afp://user:password@address/directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use the newly created file in &lt;em&gt;/etc/auto_master&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/nas			auto_nas	-nosuid
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mongo DB</title>
      <link>https://joostmeijles.github.io/doc/mongo-db/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/mongo-db/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.mongodb.org&#34;&gt;MongoDB&lt;/a&gt; (from humongous) is a free and open-source cross-platform document-oriented database.
Classified as a NoSQL database, MongoDB avoids the traditional table-based relational database
structure in favor of JSON-like documents with dynamic schemas (MongoDB calls the format BSON),
making the integration of data in certain types of applications easier and faster.&lt;/p&gt;

&lt;p&gt;To copy a database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongo&amp;gt; db.copyDatabase(&amp;quot;from-dbname&amp;quot;,&amp;quot;to-dbname&amp;quot;,&amp;quot;from.host.nl&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://joostmeijles.github.io/doc/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/python/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.python.org&#34;&gt;Python&lt;/a&gt; is a programming language that lets you work quickly
and integrate systems more effectively.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP 8&lt;/a&gt; style guide for writing Python.&lt;/p&gt;

&lt;p&gt;The difference between &lt;strong&gt;str&lt;/strong&gt; and &lt;strong&gt;repr&lt;/strong&gt; &lt;a href=&#34;http://brennerm.github.io/posts/python-str-vs-repr.html&#34;&gt;explained&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSL</title>
      <link>https://joostmeijles.github.io/doc/ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/ssl/</guid>
      <description>&lt;p&gt;SSL (Secure Sockets Layer) is the standard security technology for establishing
an encrypted link between a web server and a browser. This link ensures that all
data passed between the web server and browsers remain private and integral.&lt;/p&gt;

&lt;p&gt;To create a SSL bundle (each certificate indicates its own dependent certificate):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat server.crt intermediate.crt root.crt &amp;gt; ssl-bundle.crt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To verify a SSL certificate setup (note that openssl requires to have the root certificate locally, otherwise you get error 19 (self signed &amp;hellip;)):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ openssl s_client -connect test-mbimup.navinfo.com:443 -CAfile GlobalSign-Root-R1.crt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How to debug certificates can be read &lt;a href=&#34;http://www.cyberciti.biz/faq/test-ssl-certificates-diagnosis-ssl-certificate/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How to setup SSL with Nginx can be found &lt;a href=&#34;https://support.comodo.com/index.php?/Default/Knowledgebase/Article/View/789/37/certificate-installation-nginx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sqlite</title>
      <link>https://joostmeijles.github.io/doc/sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/sqlite/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sqlite.org&#34;&gt;SQLite&lt;/a&gt; is a software library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine.
SQLite is the most widely deployed database engine in the world. The source code for SQLite is in the public domain.&lt;/p&gt;

&lt;p&gt;To show table schema:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; .schema table
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To exit SQLite console:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; .exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To switch table headers on:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; .header on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To attach another database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; attach &amp;quot;&amp;lt;database&amp;gt;.sq3&amp;quot; as ref;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Synology</title>
      <link>https://joostmeijles.github.io/doc/synology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/synology/</guid>
      <description>&lt;p&gt;Asterisk is no longer supported on DSM 6. It can however be installed using &lt;a href=&#34;https://github.com/Optware/Optware-ng&#34;&gt;Optware&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To maintain Asterisk while upgrading from DSM 5 to DSM 6:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add the following community package: &lt;a href=&#34;https://www.cphub.net&#34;&gt;https://www.cphub.net&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Go to the Package Manager and install Easy Bootstrap Installer: this will install optware on your Synology.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Backup the Asterisk configuration using the backup GUI, or at least copy sip.conf, extensions.conf, and user.conf&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Uninstall Asterisk from the DSM 5&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After all updates are done, you should be able to use ipkg from the command line. Use SSH to login, from your admin account, to your Synology.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install Asterisk 13 and GUI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo ipkg install asterisk13 asterisk-gui
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test if your Asterisk installation runs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo asterisk -vvv
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copy the backup files (not all are compatible) sip.conf, extensions.conf, and user.conf to /opt/etc/asterisk.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enable the web GUI by editing manager.conf and http.conf, see &lt;a href=&#34;http://doc.astlinux.org/userdoc:tt_asterisk-gui&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To automatically run Asterisk upon start add an Upstart script to e.g. /etc/init/asterisk.conf:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;start on runlevel [2345]
stop on runlevel [06]

exec /opt/sbin/asterisk
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://joostmeijles.github.io/doc/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/testing/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;HTML response codes: &lt;a href=&#34;http://httpstatus.es/&#34;&gt;http://httpstatus.es/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Redirect to stdout and terminate after 1 second after connection is idle:
&lt;code&gt;
sudo socat -T1 TCP4-LISTEN:8080,reuseaddr STDOUT
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show local network traffic on port 8080:
&lt;code&gt;
sudo tcpflow -Ci lo port 8080
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show local network traffic matching PUT:
&lt;code&gt;
sudo ngrep -d lo &#39;^PUT&#39;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TCP dump:
&lt;code&gt;
sudo tcpdump -i lo &#39;port 80&#39; -w -
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wireshark:
&lt;code&gt;
sudo apt-get install wireshark
sudo dpkg-reconfigure wireshark-common
sudo adduser $USER wireshark
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wireshark ZeroMQ: &lt;a href=&#34;https://github.com/whitequark/zmtp-wireshark&#34;&gt;https://github.com/whitequark/zmtp-wireshark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GMock: &lt;a href=&#34;http://yolyeng.blogspot.nl/2014/01/google-test-and-google-mock-using.html&#34;&gt;http://yolyeng.blogspot.nl/2014/01/google-test-and-google-mock-using.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://joostmeijles.github.io/doc/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/tools/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Set Java VM memory:
&lt;code&gt;
/etc/eclipse.ini
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check mounts:
&lt;code&gt;
df -h
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mapview:
&lt;code&gt;
mv2 [-r latest]
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To debug a dynamically loaded library with GDB (make sure that shared libraries contain debug symbols, this is e.g. not the case for MapAPI releases):
&lt;code&gt;gdb&amp;gt; set environment LD_PRELOAD &amp;lt;librarytodebug.so&amp;gt;&lt;/code&gt;
&lt;code&gt;gdb&amp;gt; set environment LD_LIBRARY_PATH &amp;lt;library path&amp;gt;&lt;/code&gt;
&lt;code&gt;gdb&amp;gt; dir &amp;lt;source directory&amp;gt;&lt;/code&gt; This seems to be optional
Next set a breakpoint at the start of the program (such that the so gets loaded) and run GDB. At the breakpoint you should be able to load the source file from the so.&lt;/li&gt;
&lt;li&gt;GDB sometimes hangs upon start, to reset GDB: &lt;code&gt;rm -Rf ~/.ddd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set breakpoint at catch in GDB: &lt;code&gt;catch catch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;rsync -ave ssh from-machine:/dir/ /to/dir/&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Various</title>
      <link>https://joostmeijles.github.io/doc/various/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/various/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Embed text in object file: &lt;a href=&#34;http://www.linuxjournal.com/content/embedding-file-executable-aka-hello-world-version-5967&#34;&gt;http://www.linuxjournal.com/content/embedding-file-executable-aka-hello-world-version-5967&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -A1 [text] [file]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -hs * | sort -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overlapping static instances: &lt;a href=&#34;http://stackoverflow.com/questions/6714046/c-linux-double-destruction-of-static-variable-linking-symbols-overlap&#34;&gt;http://stackoverflow.com/questions/6714046/c-linux-double-destruction-of-static-variable-linking-symbols-overlap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Controlling symbol visibility: &lt;a href=&#34;http://www.ibm.com/developerworks/aix/library/au-aix-symbol-visibility/&#34;&gt;http://www.ibm.com/developerworks/aix/library/au-aix-symbol-visibility/&lt;/a&gt; and &lt;a href=&#34;http://www.akkadia.org/drepper/dsohowto.pdfdud&#34;&gt;http://www.akkadia.org/drepper/dsohowto.pdfdud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enabling core dumps: &lt;a href=&#34;http://www.akadia.com/services/ora_enable_core.html&#34;&gt;http://www.akadia.com/services/ora_enable_core.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Show latest cron jobs
&lt;code&gt;
sudo grep -i cron /var/log/syslog|tail -2
&lt;/code&gt;
-
&lt;code&gt;
sudo apt-get -o Dpkg::Options::=&amp;quot;--force-overwrite&amp;quot; install &amp;lt;package name&amp;gt;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Firewall setup: &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-setup-a-firewall-with-ufw-on-an-ubuntu-and-debian-cloud-server&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-setup-a-firewall-with-ufw-on-an-ubuntu-and-debian-cloud-server&lt;/a&gt;
&lt;code&gt;
sudo ufw
&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Activate newly created users group:
&lt;code&gt;
newgrp docker
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Easy memory usage overview: &lt;a href=&#34;https://github.com/crquan/coremem&#34;&gt;https://github.com/crquan/coremem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C10K discussion: &lt;a href=&#34;http://www.kegel.com/c10k.html#nb.edge&#34;&gt;http://www.kegel.com/c10k.html#nb.edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;List open file descriptors per pid:
&lt;code&gt;
lsof -p &amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Number of open files on Linux: &lt;a href=&#34;http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/&#34;&gt;http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To allow su to set ulimit, edit and uncomment pam_limits.so in: /etc/pam.d/su&lt;/li&gt;
&lt;li&gt;Set ulimits system wide, note that root permissions need to be set explicitly: /etc/security/limits.conf&lt;/li&gt;
&lt;li&gt;Lookup open sockets:
&lt;code&gt;
while [ 1 ]; do sudo lsof -p `pidof &amp;lt;proc name&amp;gt;` | grep ESTABLISHED | wc; sysctl fs.file-nr; sleep 1; done
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TCP backlog in Linux: &lt;a href=&#34;http://veithen.github.io/2014/01/01/how-tcp-backlog-works-in-linux.html&#34;&gt;http://veithen.github.io/2014/01/01/how-tcp-backlog-works-in-linux.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TCP TIME_WAIT: &lt;a href=&#34;http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html&#34;&gt;http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TCP_NODELAY: &lt;a href=&#34;http://www.ibase.ru/devinfo/tcp_nodelay.txt&#34;&gt;http://www.ibase.ru/devinfo/tcp_nodelay.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C10K problem: &lt;a href=&#34;http://www.kegel.com/c10k.html&#34;&gt;http://www.kegel.com/c10k.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some benchmark rules: &lt;a href=&#34;https://www.mnot.net/blog/2011/05/18/http_benchmark_rules&#34;&gt;https://www.mnot.net/blog/2011/05/18/http_benchmark_rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ps cpu% vs top cpu%: &lt;a href=&#34;http://unix.stackexchange.com/questions/58539/top-and-ps-not-showing-the-same-cpu-result&#34;&gt;http://unix.stackexchange.com/questions/58539/top-and-ps-not-showing-the-same-cpu-result&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trace function calls: &lt;a href=&#34;http://ndevilla.free.fr/etrace/&#34;&gt;http://ndevilla.free.fr/etrace/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set UTF-8 as default for Gnome terminal:
&lt;code&gt;
gconftool --set --type=string /apps/gnome-terminal/profiles/Default/encoding en_US.UTF-8
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Socket reuse explained: &lt;a href=&#34;http://stackoverflow.com/questions/14388706/socket-options-so-reuseaddr-and-so-reuseport-how-do-they-differ-do-they-mean-t&#34;&gt;http://stackoverflow.com/questions/14388706/socket-options-so-reuseaddr-and-so-reuseport-how-do-they-differ-do-they-mean-t&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTP workgroup page: &lt;a href=&#34;http://httpwg.org/&#34;&gt;http://httpwg.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change SUDO behavior:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; visudo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add to last line:
&lt;code&gt;joost.meijles ALL=(ALL) NOPASSWD:ALL&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SSHFS: &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-ssh&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-ssh&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CCache with Memcached: &lt;a href=&#34;https://gist.github.com/itensionanders/2bd0056027f8308d4cd8&#34;&gt;https://gist.github.com/itensionanders/2bd0056027f8308d4cd8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linux select vs. poll vs. epoll: &lt;a href=&#34;http://www.ulduzsoft.com/2014/01/select-poll-epoll-practical-difference-for-system-architects/&#34;&gt;http://www.ulduzsoft.com/2014/01/select-poll-epoll-practical-difference-for-system-architects/&lt;/a&gt;
POLLOUT explained: &lt;a href=&#34;http://stackoverflow.com/questions/12170037/when-to-use-pollout&#34;&gt;http://stackoverflow.com/questions/12170037/when-to-use-pollout&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.loic-yvonnet.com/articles/category/cpp/&#34;&gt;C++&lt;sup&gt;11&lt;/sup&gt;&amp;frasl;&lt;sub&gt;14&lt;/sub&gt; multi-theading explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Wireshark</title>
      <link>https://joostmeijles.github.io/doc/wireshark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://joostmeijles.github.io/doc/wireshark/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.wireshark.org&#34;&gt;Wireshark&lt;/a&gt; is the world&amp;rsquo;s foremost network protocol analyzer.
It lets you see what&amp;rsquo;s happening on your network at a microscopic level.
It is the de facto (and often de jure) standard across many industries and educational institutions.&lt;/p&gt;

&lt;p&gt;Enable non-root users to use network interfaces:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo dpkg-reconfigure wireshark-common
$ sudo adduser $USER wireshark
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>